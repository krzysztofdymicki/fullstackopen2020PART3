{"version":3,"sources":["components/Notification.js","components/Filter.js","components/Form.js","components/Numbers.js","services/persons.js","App.js","index.js"],"names":["Notification","notification","notificationClass","console","log","className","Filter","value","onChange","Form","handleSubmit","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","type","Numbers","filterValue","persons","handleRemove","filter","person","RegExp","test","name","map","key","id","number","onClick","newPerson","axios","post","then","response","data","delete","updatedPerson","put","App","useState","setPersons","setNewName","setNewNumber","setFilterValue","setNotification","setNotificationClass","useEffect","get","event","target","preventDefault","some","window","confirm","find","personsService","updated","result","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60c834db.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Notification({ notification, notificationClass }) {\n\n  console.log(notificationClass)\n\n    return notification \n    ? (<div className={notificationClass}>\n       {notification}\n       </div>)\n    \n    : null\n\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Filter = ({ value, onChange}) => {\n\n    return (\n        <div>\n         filter shown with <input value={value} onChange={onChange} />\n         </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Form = ({ handleSubmit, handleNameChange, handleNumberChange, newName, newNumber }) => {\n  \n    return (\n        <form onSubmit={handleSubmit}>\n        <h2>Add New</h2>\n        <div>\n          name: <input onChange={handleNameChange} value={newName} />\n        </div>\n        <div>\n          number: <input onChange={handleNumberChange} value={newNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default Form\n","import React from 'react'\n\nconst Numbers = ({ filterValue, persons, handleRemove }) => {\n\n    return (\n        <ul>\n        {filterValue \n        ? persons.filter(person => new RegExp(filterValue, \"ig\").test(person.name))\n          .map(person => <li key={person.id}>{person.name} {person.number} <button onClick={() => handleRemove(person.id, person.name)}>delete</button></li>)\n        : persons.map(person => <li key={person.id}>{person.name} {person.number} <button onClick={() => handleRemove(person.id, person.name)}>delete</button></li>)}\n      </ul>\n    )\n}\n\nexport default Numbers","import axios from 'axios'\nconst baseURL = '/api/persons'\n\nconst create = (newPerson) => {\n  const request = axios.post(baseURL, newPerson)\n  return request.then(response => response.data)\n}\n \nconst remove = (id) => {\n  const request = axios.delete(`${baseURL}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (updatedPerson, id) => {\n  const request = axios.put(`${baseURL}/${id}`, updatedPerson)\n  return request.then(response => response.data)\n}\n\nexport default { create, remove, update }","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Numbers from './components/Numbers'\nimport personsService from './services/persons'\n\n\nconst App = () => {\n\n  //STATE\n\n  const [ persons, setPersons] = useState([\n    { name: 'Arto Hellas',\n      id: 1 }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterValue, setFilterValue ] = useState('')\n  const [ notification, setNotification ] = useState('')\n  const [ notificationClass, setNotificationClass ] = useState('')\n\n  // HOOKS\n\n  const fetch = () => {\n    axios.get('/api/persons')\n         .then(response => response.data)\n         .then(response => setPersons(response))\n  }\n\n  useEffect(fetch, [])\n\n  // HANDLERS\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    \n    if(persons.some(person => person.name === newName)) {\n\n      // UPDATING PERSON\n\n      if(window.confirm(`Would you like to update the existing number for ${newName} ?`)) {\n        const person = persons.find(person => person.name === newName)\n\n        const updatedPerson = {\n         ...person,\n         number: newNumber\n        }\n\n        personsService.update(updatedPerson, person.id)\n        .then(updated => setPersons(persons.map(person => person.id === updated.id ? updated : person)))\n        .then(result => {\n          setNotificationClass('success')\n          setNotification(`Number for ${newName} updated`)\n          setTimeout(() => {\n            setNotification(``)\n            setNotificationClass('')\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setNotificationClass('error')\n      setNotification('This number has been already deleted')\n      setTimeout(() => {\n        setNotification(``)\n        setNotificationClass('')\n      }, 5000)\n        })\n      }\n    } \n      // ADDING NEW PERSON\n\n    else {\n    const person = {name: newName,\n                    number: newNumber\n                   }\n    personsService.create(person)\n    .then(person => setPersons(persons.concat(person)))\n    setNotificationClass('success')\n    setNotification(`${newName} was added to the phonebook`)\n    setTimeout(() => {\n      setNotification(``)\n      setNotificationClass('')\n    }, 5000)\n    setNewName('')\n    setNewNumber('')\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterValue(event.target.value)\n  }\n  \n  // DELETING PERSON\n\n  const handleRemove = (id, name) => {\n    if(window.confirm(`Are you sure, you want to delete ${name} ?`)) {\n    personsService.remove(id)\n    .then(result => setPersons(persons.filter(person => person.id !== id)))\n    .catch(error => {\n      setNotificationClass('error')\n      setNotification('This number has been already deleted')\n      setTimeout(() => {\n        setNotification(``)\n        setNotificationClass('')\n      }, 5000)\n    })\n\n    }\n  }\n\n\n  return (\n    <div>\n      <Notification notification={notification} notificationClass={notificationClass} />\n      <h2>Phonebook</h2>\n      <Filter value={filterValue} onChange={handleFilterChange}/>\n      <Form handleSubmit={handleSubmit} handleNumberChange={handleNumberChange} handleNameChange={handleNameChange}\n      newNumber={newNumber} newName={newName}/>\n      <h2>Numbers</h2>\n      <Numbers filterValue={filterValue} persons={persons} handleRemove={handleRemove} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}